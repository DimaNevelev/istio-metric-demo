---
apiVersion: v1
kind: Service
metadata:
  name: service-1
  labels:
    app: service-1
    service: service-1
spec:
  ports:
    - port: 8080
      name: http
  selector:
    app: service-1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-1-v1
  labels:
    app: service-1
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-1
      version: v1
  template:
    metadata:
      labels:
        app: service-1
        version: v1
    spec:
      serviceAccountName: default
      containers:
        - name: service-1
          image: istioexample/demo:0.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: service-2
  labels:
    app: service-2
    service: service-2
spec:
  ports:
    - port: 8080
      name: http
  selector:
    app: service-2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-2-v1
  labels:
    app: service-2
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-2
      version: v1
  template:
    metadata:
      labels:
        app: service-2
        version: v1
    spec:
      serviceAccountName: default
      containers:
        - name: service-2
          image: istioexample/demo:0.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080

---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: demo-gateway
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: service-1
spec:
  hosts:
    - "*"
  gateways:
    - demo-gateway
  http:
    - match:
        - uri:
            prefix: /api/v1
      route:
        - destination:
            host: service-1
            port:
              number: 8080
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: service-discovery-client
rules:
  - apiGroups: [""]
    resources: ["services", "pods", "configmaps", "endpoints"]
    verbs: ["get", "watch", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: default:service-discovery-client
subjects:
  - kind: ServiceAccount
    name: default
  - kind: ServiceAccount
    name: default
  - kind: ServiceAccount
    name: default
    namespace: n2
roleRef:
  kind: ClusterRole
  name: service-discovery-client
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Namespace
metadata:
  name: n2
  labels:
    istio-injection: enabled
---
apiVersion: v1
kind: Service
metadata:
  name: service-3
  namespace: n2
  labels:
    app: service-3
    service: service-3
spec:
  ports:
    - port: 8080
      name: http
  selector:
    app: service-3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-3-v1
  namespace: n2
  labels:
    app: service-3
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-3
      version: v1
  template:
    metadata:
      labels:
        app: service-3
        version: v1
    spec:
      serviceAccountName: default
      containers:
        - name: service-3
          image: istioexample/demo:0.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
---